name: scrape
on:
  workflow_dispatch:
  schedule:
  - cron: '0 0 1 */2 *'
env:
  ACTIONS_STEP_DEBUG: true
jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Check out this repo
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          sudo apt-get -y install build-essential libpoppler-cpp-dev pkg-config python3-dev pgloader sqlite3
          pip install -r requirements.txt
      - name: Build DB
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 55
          retry_wait_seconds: 15
          max_attempts: 3
          retry_on: any
          command: "python scrape.py --db ./db/age.sqlite"
      - name: Write README.md
        run: python3 md.py --db ./db/age.sqlite
      - name: Commit and push if content changed
        run: |-
          DT=$(date -u +'%Y-%m-%d %H:%M UTC')
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add -A 
          git commit -m "Automated: ${DT}" || exit 0
          git push
          echo "ok" > there_are_changes
      - name: SET DB
        if: ${{ hashFiles('there_are_changes') != '' }}
        env:
          DB_TARGET: ${{ secrets.DB_TARGET }}
        run: ./db/set_db.sh
      - name: Guardar archivo como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: age.sqlite
          path: ./db/age.sqlite
  deploy_site:
    runs-on: ubuntu-latest
    needs: scrape
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      id-token: write
      pages: write
    steps:
      - name: Check out this repo
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          sudo apt-get -y install build-essential libpoppler-cpp-dev pkg-config python3-dev
          pip install -r requirements.txt
      - name: GET DB
        uses: actions/download-artifact@v4
        with:
          name: age.sqlite
          path: ./db/
      #- name: Dump data
      #  run: python3 dump.py --db ./db/age.sqlite
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './db/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
